{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class UploadComponent {\n  constructor() {\n    this.newPost = new EventEmitter();\n    this.uploadFormVisible = false;\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    if (event.target != null) {\n      reader.readAsDataURL(file);\n      reader.onload = event => {\n        if (event.target != null) {\n          this.newPost.image = event.target.result;\n        }\n      };\n    }\n  }\n  onSubmit() {\n    this.newPost.emit(this.newPost);\n    this.newPost = {\n      image: '',\n      likes: 0,\n      description: ''\n    };\n    this.uploadFormVisible = false;\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)();\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  outputs: {\n    newPost: \"newPost\"\n  },\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-3\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\", \"mb-4\"], [3, \"submit\"], [1, \"mb-3\"], [\"for\", \"imageInput\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"imageInput\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [\"for\", \"descriptionInput\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"descriptionInput\", \"placeholder\", \"Enter a description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", \"id\", \"cancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n      i0.ɵɵtext(6, \"Upload Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 6);\n      i0.ɵɵlistener(\"submit\", function UploadComponent_Template_form_submit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Select Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_11_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.newPost.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n      i0.ɵɵtext(18, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_19_listener() {\n        return ctx.uploadFormVisible = false;\n      });\n      i0.ɵɵtext(20, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.newPost.description);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA4BA,YAAY,QAAQ,eAAe;;;AAO/D,OAAM,MAAOC,eAAe;EAL5BC;IAMY,YAAO,GAAG,IAAIF,YAAY,EAAyD;IAC7F,sBAAiB,GAAG,KAAK;;EAEzBG,cAAc,CAACC,KAAU;IACvB,MAAMC,IAAI,GAASD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAE/B,IAAIL,KAAK,CAACE,MAAM,IAAI,IAAI,EAAE;MACxBE,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;MAE1BG,MAAM,CAACG,MAAM,GAAIP,KAAK,IAAI;QACxB,IAAIA,KAAK,CAACE,MAAM,IAAI,IAAI,EAAE;UACxB,IAAI,CAACM,OAAO,CAACC,KAAK,GAAGT,KAAK,CAACE,MAAM,CAACQ,MAAgB;;MAEtD,CAAC;;EAEL;EAEAC,QAAQ;IACN,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAC;IAC/B,IAAI,CAACA,OAAO,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEI,KAAK,EAAE,CAAC;MAAEC,WAAW,EAAE;IAAE,CAAE;IACvD,IAAI,CAACC,iBAAiB,GAAG,KAAK;EAChC;;AAvBWlB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmB;EAAAC;IAAAT;EAAA;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCP5BC,8BAA4B;MAKgCA,4BAAY;MAAAA,iBAAK;MACzDA,+BAA4B;MAAtBA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACvBD,8BAAkB;MAC6BA,6BAAY;MAAAA,iBAAQ;MAC/DA,iCAA2G;MAAlCA;QAAA,OAAUC,0BAAsB;MAAA,EAAC;MAA1GD,iBAA2G;MAE/GA,+BAAkB;MACmCA,4BAAW;MAAAA,iBAAQ;MACpEA,kCAAkI;MAAlCA;QAAA;MAAA,EAAiC;MAAjIA,iBAAkI;MAEtIA,gCAAyB;MACyBA,uBAAM;MAAAA,iBAAS;MAC7DA,mCAAsG;MAApCA;QAAA,+BAA6B,KAAK;MAAA,EAAC;MAACA,uBAAM;MAAAA,iBAAS;;;MAJrBA,gBAAiC;MAAjCA,iDAAiC","names":["EventEmitter","UploadComponent","constructor","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","newPost","image","result","onSubmit","emit","likes","description","uploadFormVisible","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\vizsgaremek\\frontend\\src\\app\\upload\\upload.component.ts","E:\\vizsgaremek\\frontend\\src\\app\\upload\\upload.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n  @Output() newPost = new EventEmitter<{ image: string; likes: number; description: string }>();\n  uploadFormVisible = false;\n  \n  onFileSelected(event: any): void {\n    const file: File = event.target.files[0];\n    const reader = new FileReader();\n\n    if (event.target != null) {\n      reader.readAsDataURL(file);\n\n      reader.onload = (event) => {\n        if (event.target != null) {\n          this.newPost.image = event.target.result as string;\n        }\n      };\n    }\n  }\n\n  onSubmit(): void {\n    this.newPost.emit(this.newPost);\n    this.newPost = { image: '', likes: 0, description: '' };\n    this.uploadFormVisible = false;\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h2 class=\"card-title text-center mb-4\">Upload Image</h2>\n                    <form (submit)=\"onSubmit()\">\n                        <div class=\"mb-3\">\n                            <label for=\"imageInput\" class=\"form-label\">Select Image</label>\n                            <input type=\"file\" class=\"form-control\" id=\"imageInput\" accept=\"image/*\" (change)=\"onFileSelected($event)\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"descriptionInput\" class=\"form-label\">Description</label>\n                            <input type=\"text\" class=\"form-control\" id=\"descriptionInput\" placeholder=\"Enter a description\" [(ngModel)]=\"newPost.description\">\n                        </div>\n                        <div class=\"text-center\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                            <button type=\"button\" id=\"cancelButton\" class=\"btn btn-secondary\" (click)=\"uploadFormVisible = false\">Cancel</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}