{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class UploadComponent {\n  constructor() {\n    this.close = new EventEmitter();\n    this.newPost = {\n      image: '',\n      likes: 0,\n      description: ''\n    };\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    if (event.target != null) {\n      reader.readAsDataURL(file);\n      reader.onload = event => {\n        if (event.target != null) {\n          this.newPost.image = event.target.result;\n        }\n      };\n    }\n  }\n  onSubmit(event) {\n    event.preventDefault();\n    // Submit the new post and close the upload form\n    this.close.emit();\n  }\n  close() {\n    this.newPost.image = '';\n    this.newPost.description = '';\n    this.close.emit();\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)();\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  outputs: {\n    close: \"close\"\n  },\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"row\", \"mt-3\"], [1, \"col-md-6\", \"offset-md-3\"], [\"id\", \"uploadForm\", 1, \"card\"], [1, \"card-body\"], [3, \"submit\"], [1, \"mb-3\"], [\"for\", \"imageInput\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"imageInput\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [\"for\", \"descriptionInput\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"descriptionInput\", \"placeholder\", \"Enter a description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"id\", \"cancelButton\", 1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function UploadComponent_Template_form_submit_4_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Select Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7);\n      i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_8_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.newPost.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 10);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_15_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵtext(16, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.newPost.description);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;AAO/D,OAAM,MAAOC,eAAe;EAL5BC;IAMY,UAAK,GAAG,IAAIF,YAAY,EAAQ;IAC1C,YAAO,GAAG;MAAEG,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,WAAW,EAAE;IAAE,CAAE;;EAElDC,cAAc,CAACC,KAAU;IACvB,MAAMC,IAAI,GAASD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAE/B,IAAIL,KAAK,CAACE,MAAM,IAAI,IAAI,EAAE;MACxBE,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;MAE1BG,MAAM,CAACG,MAAM,GAAIP,KAAK,IAAI;QACxB,IAAIA,KAAK,CAACE,MAAM,IAAI,IAAI,EAAE;UACxB,IAAI,CAACM,OAAO,CAACZ,KAAK,GAAGI,KAAK,CAACE,MAAM,CAACO,MAAgB;;MAEtD,CAAC;;EAEL;EAEAC,QAAQ,CAACV,KAAY;IACnBA,KAAK,CAACW,cAAc,EAAE;IACtB;IACA,IAAI,CAACC,KAAK,CAACC,IAAI,EAAE;EACnB;EAEAD,KAAK;IACH,IAAI,CAACJ,OAAO,CAACZ,KAAK,GAAG,EAAE;IACvB,IAAI,CAACY,OAAO,CAACV,WAAW,GAAG,EAAE;IAC7B,IAAI,CAACc,KAAK,CAACC,IAAI,EAAE;EACnB;;AA7BWnB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAoB;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCP5BC,8BAAsB;MAIAA;QAAA,OAAUC,oBAAgB;MAAA,EAAC;MAC7BD,8BAAkB;MAC6BA,4BAAY;MAAAA,iBAAQ;MAC/DA,gCAA2G;MAAlCA;QAAA,OAAUC,0BAAsB;MAAA,EAAC;MAA1GD,iBAA2G;MAE/GA,8BAAkB;MACmCA,4BAAW;MAAAA,iBAAQ;MACpEA,iCAAkI;MAAlCA;QAAA;MAAA,EAAiC;MAAjIA,iBAAkI;MAEtIA,mCAAgD;MAAAA,uBAAM;MAAAA,iBAAS;MAC/DA,mCAAoF;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAHCA,gBAAiC;MAAjCA,iDAAiC","names":["EventEmitter","UploadComponent","constructor","image","likes","description","onFileSelected","event","file","target","files","reader","FileReader","readAsDataURL","onload","newPost","result","onSubmit","preventDefault","close","emit","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\vizsgaremek\\frontend\\src\\app\\upload\\upload.component.ts","E:\\vizsgaremek\\frontend\\src\\app\\upload\\upload.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n  @Output() close = new EventEmitter<void>();\n  newPost = { image: '', likes: 0, description: '' };\n\n  onFileSelected(event: any): void {\n    const file: File = event.target.files[0];\n    const reader = new FileReader();\n\n    if (event.target != null) {\n      reader.readAsDataURL(file);\n\n      reader.onload = (event) => {\n        if (event.target != null) {\n          this.newPost.image = event.target.result as string;\n        }\n      };\n    }\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    // Submit the new post and close the upload form\n    this.close.emit();\n  }\n\n  close(): void {\n    this.newPost.image = '';\n    this.newPost.description = '';\n    this.close.emit();\n  }\n}\n","<div class=\"row mt-3\">\r\n    <div class=\"col-md-6 offset-md-3\">\r\n        <div class=\"card\" id=\"uploadForm\">\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"onSubmit($event)\">\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"imageInput\" class=\"form-label\">Select Image</label>\r\n                        <input type=\"file\" class=\"form-control\" id=\"imageInput\" accept=\"image/*\" (change)=\"onFileSelected($event)\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"descriptionInput\" class=\"form-label\">Description</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"descriptionInput\" placeholder=\"Enter a description\" [(ngModel)]=\"newPost.description\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-secondary\">Submit</button>\r\n                    <button type=\"button\" id=\"cancelButton\" class=\"btn btn-secondary\" (click)=\"close()\">Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}