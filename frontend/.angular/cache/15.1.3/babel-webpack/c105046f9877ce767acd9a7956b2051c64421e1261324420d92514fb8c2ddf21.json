{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(titleService, router) {\n    this.titleService = titleService;\n    this.router = router;\n    this.loginData = {\n      username: 'admin',\n      password: 'admin'\n    };\n    this.titleService.setTitle('VisualPosting - Bejelentkezés');\n  }\n  login() {\n    console.log(this.username, this.password);\n    // Here you can replace the condition with your own authentication logic\n    if (this.username === this.loginData.username && this.password === this.loginData.password) {\n      this.router.navigate(['/feed']);\n    }\n  }\n  isFormValid() {\n    return this.username && this.password;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Title), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"login-card\"], [\"matInput\", \"\", \"placeholder\", \"Felhaszn\\u00E1l\\u00F3n\\u00E9v\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Jelsz\\u00F3\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [1, \"haveRegister\"], [\"routerLink\", \"/register\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-title\");\n      i0.ɵɵtext(2, \"Bejelentkez\\u00E9s\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\")(5, \"mat-form-field\")(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(10, \"Bejelentkez\\u00E9s\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"p\");\n      i0.ɵɵtext(13, \"Nincs m\\u00E9g fi\\u00F3kod? \");\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵtext(15, \"Regisztr\\u00E1ci\\u00F3\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.isFormValid());\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    background: linear-gradient(45deg, rgb(186, 230, 255), #e7eeff);\\r\\n    padding-top: 2em;\\r\\n    padding-left: 2em;\\r\\n    padding-right: 2em;\\r\\n    padding-bottom: 0.1em;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 0.3em;\\r\\n}\\r\\n\\r\\n.haveRegister[_ngcontent-%COMP%] {\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n    color: #0079d5;\\r\\n    text-decoration: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQiwrREFBK0Q7SUFDL0QsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QscUJBQXFCO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2IoMTg2LCAyMzAsIDI1NSksICNlN2VlZmYpO1xyXG4gICAgcGFkZGluZy10b3A6IDJlbTtcclxuICAgIHBhZGRpbmctbGVmdDogMmVtO1xyXG4gICAgcGFkZGluZy1yaWdodDogMmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDAuMWVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XHJcbn1cclxuXHJcbi5oYXZlUmVnaXN0ZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG59XHJcblxyXG5hIHtcclxuICAgIGNvbG9yOiAjMDA3OWQ1O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EAUzBC,YAAqBC,YAAmB,EAAUC,MAAc;IAA3C,iBAAY,GAAZD,YAAY;IAAiB,WAAM,GAANC,MAAM;IALvD,cAAS,GAAG;MACXC,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;KACX;IAGC,IAAI,CAACH,YAAY,CAACI,QAAQ,CAAC,+BAA+B,CAAC;EAC7D;EAEAC,KAAK;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IAEzC;IACA,IAAI,IAAI,CAACD,QAAQ,KAAK,IAAI,CAACM,SAAS,CAACN,QAAQ,IAAI,IAAI,CAACC,QAAQ,KAAK,IAAI,CAACK,SAAS,CAACL,QAAQ,EAAE;MAC1F,IAAI,CAACF,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAEAC,WAAW;IACT,OAAO,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACC,QAAQ;EACvC;;AAzBWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,mCAA6B;MACTA,kCAAa;MAAAA,iBAAiB;MAC9CA,wCAAkB;MAGuCA;QAAA;MAAA,EAAsB;MAAnEA,iBAAoF;MAExFA,sCAAgB;MACyCA;QAAA;MAAA,EAAsB;MAA3EA,iBAA4F;MAEhGA,iCAAwF;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,mCAAa;MAAAA,iBAAS;MAElHA,+BAA0B;MACnBA,6CAAkB;MAAAA,6BAA0B;MAAAA,uCAAY;MAAAA,iBAAI;;;MARdA,eAAsB;MAAtBA,sCAAsB;MAGdA,eAAsB;MAAtBA,sCAAsB;MAErCA,eAA2B;MAA3BA,6CAA2B","names":["LoginComponent","constructor","titleService","router","username","password","setTitle","login","console","log","loginData","navigate","isFormValid","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\vizsgaremek\\frontend\\src\\app\\login\\login.component.ts","E:\\vizsgaremek\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  username: string;\r\n  password: string;\r\n\r\n\r\n   loginData = {\r\n    username: 'admin',\r\n    password: 'admin'\r\n  };\r\n\r\n  constructor (private titleService: Title, private router: Router) {\r\n    this.titleService.setTitle('VisualPosting - Bejelentkezés');\r\n  }\r\n\r\n  login() {\r\n    console.log(this.username, this.password);\r\n    \r\n    // Here you can replace the condition with your own authentication logic\r\n    if (this.username === this.loginData.username && this.password === this.loginData.password) {\r\n      this.router.navigate(['/feed']);\r\n    }\r\n  }\r\n  \r\n  isFormValid() {\r\n    return this.username && this.password;\r\n  }\r\n}\r\n\r\n","<mat-card class=\"login-card\">\r\n    <mat-card-title>Bejelentkezés</mat-card-title>\r\n    <mat-card-content>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Felhasználónév\" [(ngModel)]=\"username\" name=\"username\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput type=\"password\" placeholder=\"Jelszó\" [(ngModel)]=\"password\" name=\"password\">\r\n            </mat-form-field>\r\n            <button mat-raised-button color=\"primary\" [disabled]=\"!isFormValid()\" (click)=\"login()\">Bejelentkezés</button>\r\n        </form>\r\n        <div class=\"haveRegister\">\r\n            <p>Nincs még fiókod? <a routerLink=\"/register\">Regisztráció</a></p>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}